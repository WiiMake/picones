# Documentation for linker found at: https://cc65.github.io/doc/ld65.html#s5
MEMORY {
    # file = "" means no file is associated with this memory area; it is just a named section of memory where you can define vars
    # file = %0 is your output file
    ZP:     start = $00,    size = $0100, type = rw, file = ""; # $00 in CPU memory
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";

    # start is NOT the same as file offset; rather, it is the relative address used for calculations in this segment
    # PRG_SAMPLES is a swappable bank of 16KB chunks
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00; # $0000 in ROM (output) file
    # Note that it's your code that dictates where PRG_SAMPLES appears to the CPU at runtime (i.e. start will be $C000 when mapped in)
    # So for the linker there's no reason not to use the largest range
    PRG_SAMPLES: start = $8000, size = $3E000, file = %O, fill = yes; # swappable bank: 31 * 8KB + 8KB(fixed) = 256KB
    PRG_FIXED:   start = $E000, size = $2000,  file = %O, fill = yes; # 8KB fixed bank
    CHR:    start = $0000, size = $2000, type = ro, file = %O, fill = yes, fillval = $00; # $0000 in PPU memory
}

SEGMENTS {
    ZP: load = ZP,  type = zp;
    # OAM:      load = OAM, type = bss, align = $100;
    BSS:      load = RAM, type = bss;
    RAM:      load = RAM, type = bss; # Handles FamiStudio's defined RAM segment
    HEADER:   load = HDR, type = ro;

    # Program core -> in the fixed program bank (C000 - FFFA)
    CODE:     load = PRG_FIXED, type = ro; # Put critical data in the fixed Bank 16
    RODATA: load = PRG_FIXED, type = ro; # put the read-only data right AFTER the code segment
    PRG:      load = PRG_FIXED, type = ro; # define the PRG segment to satisfy ld65

    # Vectors need to start at $FFFA, but still load in the fixed bank (ld65 handles this)
    VECTORS:  load = PRG_FIXED, type = ro, start = $FFFA;

    # Mapped samples -> in switchable banks
    # Offset is relative to start, so no need to account for previous segments' sizes or padding
    DPCM0:   load = PRG_SAMPLES, type = ro, offset = $00000; # Bank 0
    DPCM1:   load = PRG_SAMPLES, type = ro, offset = $02000; # Bank 1
    DPCM2:   load = PRG_SAMPLES, type = ro, offset = $04000; # Bank 2
    DPCM3:   load = PRG_SAMPLES, type = ro, offset = $06000; # Bank 3
    DPCM4:   load = PRG_SAMPLES, type = ro, offset = $08000; # Bank 4
    DPCM5:   load = PRG_SAMPLES, type = ro, offset = $0A000; # Bank 5
    DPCM6:   load = PRG_SAMPLES, type = ro, offset = $0C000; # Bank 6
    DPCM7:   load = PRG_SAMPLES, type = ro, offset = $0E000; # Bank 7
    DPCM8:   load = PRG_SAMPLES, type = ro, offset = $10000; # Bank 8
    DPCM9:   load = PRG_SAMPLES, type = ro, offset = $12000; # Bank 9
    DPCM10:  load = PRG_SAMPLES, type = ro, offset = $14000; # Bank 10
    DPCM11:  load = PRG_SAMPLES, type = ro, offset = $16000; # Bank 11
    DPCM12:  load = PRG_SAMPLES, type = ro, offset = $18000; # Bank 12
    DPCM13:  load = PRG_SAMPLES, type = ro, offset = $1A000; # Bank 13
    DPCM14:  load = PRG_SAMPLES, type = ro, offset = $1C000; # Bank 14
    DPCM15:  load = PRG_SAMPLES, type = ro, offset = $1E000; # Bank 15
    DPCM16:  load = PRG_SAMPLES, type = ro, offset = $20000; # Bank 16
    DPCM17:  load = PRG_SAMPLES, type = ro, offset = $22000; # Bank 17
    DPCM18:  load = PRG_SAMPLES, type = ro, offset = $24000; # Bank 18
    DPCM19:  load = PRG_SAMPLES, type = ro, offset = $26000; # Bank 19
    DPCM20:  load = PRG_SAMPLES, type = ro, offset = $28000; # Bank 20
    DPCM21:  load = PRG_SAMPLES, type = ro, offset = $2A000; # Bank 21
    DPCM22:  load = PRG_SAMPLES, type = ro, offset = $2C000; # Bank 22
    DPCM23:  load = PRG_SAMPLES, type = ro, offset = $2E000; # Bank 23
    DPCM24:  load = PRG_SAMPLES, type = ro, offset = $30000; # Bank 24
    DPCM25:  load = PRG_SAMPLES, type = ro, offset = $32000; # Bank 25
    DPCM26:  load = PRG_SAMPLES, type = ro, offset = $34000; # Bank 26
    DPCM27:  load = PRG_SAMPLES, type = ro, offset = $36000; # Bank 27
    DPCM28:  load = PRG_SAMPLES, type = ro, offset = $38000; # Bank 28
    DPCM29:  load = PRG_SAMPLES, type = ro, offset = $3A000; # Bank 29
    DPCM30:  load = PRG_SAMPLES, type = ro, offset = $3C000; # Bank 30
    DPCM31:  load = PRG_SAMPLES, type = ro, offset = $3E000; # Bank 31
}